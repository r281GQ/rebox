// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");

var spacingScale = /* array */[
  4,
  8,
  12,
  16,
  24,
  32,
  48
];

function createPadding(paddingValue) {
  if (typeof paddingValue === "number") {
    return /* `px */[
            25096,
            0
          ];
  } else {
    var variant = paddingValue[0];
    if (variant !== 24420) {
      if (variant !== 25744) {
        return /* `px */[
                25096,
                0
              ];
      } else {
        return Belt_Option.mapWithDefault(Belt_Array.get(spacingScale, paddingValue[1]), /* `px */[
                    25096,
                    0
                  ], (function (x) {
                      return /* `px */[
                              25096,
                              x
                            ];
                    }));
      }
    } else {
      return Belt_Option.mapWithDefault(Belt_List.head(paddingValue[1]), /* `px */[
                  25096,
                  0
                ], createPadding);
    }
  }
}

function createMargin(paddingValue) {
  if (typeof paddingValue === "number") {
    if (paddingValue !== -1065951377) {
      return /* `px */[
              25096,
              0
            ];
    } else {
      return /* auto */-1065951377;
    }
  } else {
    var variant = paddingValue[0];
    if (variant !== 24420) {
      if (variant !== 25744) {
        return /* `px */[
                25096,
                0
              ];
      } else {
        var v = paddingValue[1];
        var match = v < 0;
        return Belt_Option.mapWithDefault(Belt_Array.get(spacingScale, match ? Caml_int32.imul(-1, v) : v), /* `px */[
                    25096,
                    0
                  ], (function (x) {
                      var match = v < 0;
                      if (match) {
                        return /* `px */[
                                25096,
                                Caml_int32.imul(-1, x)
                              ];
                      } else {
                        return /* `px */[
                                25096,
                                x
                              ];
                      }
                    }));
      }
    } else {
      return Belt_Option.mapWithDefault(Belt_List.head(paddingValue[1]), /* `px */[
                  25096,
                  0
                ], createMargin);
    }
  }
}

function determineValue(main, axis, exact) {
  if (exact !== undefined) {
    return exact;
  } else if (axis !== undefined) {
    return axis;
  } else if (main !== undefined) {
    return main;
  } else {
    return /* zero */-789508312;
  }
}

function makeCss(all, horizontal, vertical, top, bottom, left, right) {
  var left$1 = determineValue(all, horizontal, left);
  var right$1 = determineValue(all, horizontal, right);
  var top$1 = determineValue(all, vertical, top);
  var bottom$1 = determineValue(all, vertical, bottom);
  return /* tuple */[
          top$1,
          bottom$1,
          left$1,
          right$1
        ];
}

function make(all, horizontal, vertical, top, bottom, left, right) {
  var match = makeCss(all, horizontal, vertical, top, bottom, left, right);
  return /* :: */[
          Css.paddingTop(createPadding(match[0])),
          /* :: */[
            Css.paddingBottom(createPadding(match[1])),
            /* :: */[
              Css.paddingRight(createPadding(match[3])),
              /* :: */[
                Css.paddingLeft(createPadding(match[2])),
                /* [] */0
              ]
            ]
          ]
        ];
}

var System = /* module */[
  /* spacingScale */spacingScale,
  /* createPadding */createPadding,
  /* createMargin */createMargin,
  /* determineValue */determineValue,
  /* makeCss */makeCss,
  /* make */make
];

function Box(Props) {
  var children = Props.children;
  var p = Props.p;
  var px = Props.px;
  var py = Props.py;
  var pt = Props.pt;
  var pb = Props.pb;
  var pl = Props.pl;
  var pr = Props.pr;
  Props.m;
  Props.mx;
  Props.my;
  Props.mt;
  Props.mb;
  Props.ml;
  Props.mr;
  make(p, px, py, pt, pb, pl, pr);
  return React.createElement("div", undefined, children);
}

var make$1 = Box;

exports.System = System;
exports.make = make$1;
/* Css Not a pure module */
